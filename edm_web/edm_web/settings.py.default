
#coding=utf-8
"""
Django settings for edm_web project.

Generated by 'django-admin startproject' using Django 1.10.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# 模板文件路径（eml文件、html文件、附件）
EDM_DATA_PATH = os.path.join(BASE_DIR, '..', 'edm_data')
ATTACH_DATA_PATH = os.path.join(BASE_DIR, '..', 'edm_data', 'attach')
TEMP_DATA_PATH = os.path.join(BASE_DIR, '..', 'edm_data', 'temp')

EDM_WEB_URL = 'http://192.168.169.128:8090'
REF_TPL_IMG_URL = 'https://www.bestedm.org'

HOSTNAME = 'www2.bestedm.org'

# 微信公众号
# URL(服务器地址)
MP_WX_URL = 'http://www2.bestedm.org/wechat/'
# Token(令牌)
MP_WX_TOKEN = ""
# EncodingAESKey(消息加解密密钥)
MP_WX_AESKEY = ''
# AppID(应用ID)
MP_WX_APPID = ''
# AppSecret(应用密钥)
MP_WX_APPSECRET = ''

# 微信商户号
# 商户ID MCHID
PAY_WX_ID = ''
# 商户支付密钥Key
PAY_WX_KEY = ""
#异步通知url，商户根据实际开发过程设定
PAY_WX_NOTIFY_URL = "http://www2.bestedm.org/wechat/pay_notify"

# 微信登陆跳转URI
OPEN_WX_LOGIN_URI = urllib.quote_plus('http://www2.bestedm.org/wechat/callback')

# 微信开发平台　网站appid
OPEN_WX_APPID = ''
HOSTNAME = 'www2.bestedm.org'

# 微信开发平台　网站密钥
OPEN_WX_KEY = ''

ALIPAY_KEY = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

ALIPAY_INPUT_CHARSET = 'utf-8'

# 合作身份者ID，以2088开头的16位纯数字
ALIPAY_PARTNER = 'xxxxxxxxxxxxxxxx'

# 签约支付宝账号或卖家支付宝帐户
ALIPAY_SELLER_EMAIL = 'ls@abc.com'

ALIPAY_SIGN_TYPE = 'MD5'

# 付完款后跳转的页面（同步通知） 要用 http://格式的完整路径，不允许加?id=123这类自定义参数
ALIPAY_RETURN_URL='http://www.xxx.com/alipay/return/'

# 交易过程中服务器异步通知的页面 要用 http://格式的完整路径，不允许加?id=123这类自定义参数
ALIPAY_NOTIFY_URL='http://www.xxx.com/alipay/notify/'

# 回执服务器
RECEIPT_URL = 'http://192.168.50.27:88/api/api.php'
RECEIPT_AUTH_KEY = 'oDerVOA0Dfh6qAk5J#5tem12j.eRJd'


PASSWORD_HASHERS = (
    'django.contrib.auth.hashers.UnsaltedMD5PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.SHA1PasswordHasher',
    'django.contrib.auth.hashers.MD5PasswordHasher',
    'django.contrib.auth.hashers.CryptPasswordHasher',
)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g7hlwtp9%f*ma&k4&1=)+e4(k%9y4k7(fs1t=@g5h8uu8-g!yv'

SESSION_ENGINE = 'django_php_bridge.backends.db'
SESSION_COOKIE_NAME = 'PHPSESSID'
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ADDRESS_IMPORT_PATH = os.path.join(BASE_DIR, 'edm_data', 'address_import')

ALLOWED_HOSTS = []

# session的超时时间设置
# SESSION_EXPIRE_AT_BROWSER_CLOSE为True时 SESSION_COOKIE_AGE 不生效。也就是说用户只能二选一，在浏览器关闭时使session失效 或 超时失效。
SESSION_COOKIE_AGE=60*60*2
# SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_SAVE_EVERY_REQUEST = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrapform',
    'app.core',
    'app.address',
    'app.template',
    'app.task',
    'app.track',
    'app.setting',
    'app.statistics',
    'app.wechat',
    'app.suggest',
    'django_weixin',

    # 'sorl.thumbnail',
    'jsonify',
    'app.mosaico',
    'captcha', # django-simple-captcha
]
AUTH_USER_MODEL = 'core.Customer'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'middleware.limitip.LimitIPRequestsMiddleware',
]

ROOT_URLCONF = 'edm_web.urls'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'django_php_bridge.backends.mybackends.CustomerUserBackend'
)



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'edm_web.wsgi.application'

#mongo settings
MONGO_HOST = '192.168.50.51'
MONGO_PORT = 27017
MONGO_USER = 'mm-mc'
MONGO_PWD = 'PFBgatL4Vq63sEP'
MONGO_DBNAME = 'mm-mc'

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PARSER_CLASS": "redis.connection.HiredisParser",
        }
    },
    "limitip": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PARSER_CLASS": "redis.connection.HiredisParser",
        }
    }
}

# Name of cache backend to cache user agents. If it not specified default
# cache alias will be used. Set to `None` to disable caching.
USER_AGENTS_CACHE = 'default'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'edm_web',                      # Or path to database file if using sqlite3.
        'USER': 'root',                      # Not used with sqlite3.
        'PASSWORD': '1234',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '3306',                      # Set to empty string for default. Not used with sqlite3.
    },

    'mm-ms': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'mm-ms',                      # Or path to database file if using sqlite3.
        'USER': 'edm_web',                      # Not used with sqlite3.
        'PASSWORD': 'XnLaT34LxaQViNB',                  # Not used with sqlite3.
        'HOST': 'www.bestedm.org',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '62407',                      # Set to empty string for default. Not used with sqlite3.
    },

    'mm-pool': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'mm-pool',                      # Or path to database file if using sqlite3.
        'USER': 'edm_web',                      # Not used with sqlite3.
        'PASSWORD': 'XnLaT34LxaQViNB',                  # Not used with sqlite3.
        'HOST': 'www.bestedm.org',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '62407',                      # Set to empty string for default. Not used with sqlite3.
    },
}

DATABASE_ROUTERS = ['router.MyRouter']


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
LOGIN_URL = '/login'

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

## 设置 masaico
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_ROOT = "/home/umail/media"
# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://example.com/media/", "http://media.example.com/"
MEDIA_URL = '/media/'
SITE_DOMAIN = "www.bestedm.org"
